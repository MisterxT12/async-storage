"use strict";(self.webpackChunkasync_storage_website=self.webpackChunkasync_storage_website||[]).push([[560],{876:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var a=n(2784);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),u=r,g=d["".concat(c,".").concat(u)]||d[u]||m[u]||o;return n?a.createElement(g,i(i({ref:t},p),{},{components:n})):a.createElement(g,i({ref:t},p))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7762:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=n(7896),r=(n(2784),n(876));const o={id:"jest",title:"Jest integration",sidebar_label:"Jest integration"},i=void 0,s={unversionedId:"advanced/jest",id:"advanced/jest",title:"Jest integration",description:"Async Storage module is tightly coupled with its NativeModule part - it needs",source:"@site/docs/advanced/Jest-integration.md",sourceDirName:"advanced",slug:"/advanced/jest",permalink:"/async-storage/docs/advanced/jest",draft:!1,editUrl:"https://github.com/react-native-async-storage/async-storage/edit/main/website/docs/advanced/Jest-integration.md",tags:[],version:"current",frontMatter:{id:"jest",title:"Jest integration",sidebar_label:"Jest integration"},sidebar:"docs",previous:{title:"Next storage implementation",permalink:"/async-storage/docs/advanced/next"},next:{title:"Brownfield integration",permalink:"/async-storage/docs/advanced/brownfield"}},c={},l=[{value:"Using Async Storage mock",id:"using-async-storage-mock",level:2},{value:"With <strong>mocks</strong> directory",id:"with-mocks-directory",level:3},{value:"With Jest setup file",id:"with-jest-setup-file",level:3},{value:"Testing with mock",id:"testing-with-mock",level:2},{value:"Overriding Mock logic",id:"overriding-mock-logic",level:2}],p={toc:l},d="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Async Storage module is tightly coupled with its ",(0,r.kt)("inlineCode",{parentName:"p"},"NativeModule")," part - it needs\na running React Native application to work properly. In order to use it in\ntests, you have to provide its separate implementation. Follow these steps to\nadd a mocked ",(0,r.kt)("inlineCode",{parentName:"p"},"Async Storage")," module."),(0,r.kt)("h2",{id:"using-async-storage-mock"},"Using Async Storage mock"),(0,r.kt)("p",null,"You can use one of two ways to provide mocked version of ",(0,r.kt)("inlineCode",{parentName:"p"},"AsyncStorage"),":"),(0,r.kt)("h3",{id:"with-mocks-directory"},"With ",(0,r.kt)("strong",{parentName:"h3"},"mocks")," directory"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"In your project root directory, create\n",(0,r.kt)("inlineCode",{parentName:"li"},"__mocks__/@react-native-async-storage")," directory."),(0,r.kt)("li",{parentName:"ol"},"Inside that folder, create ",(0,r.kt)("inlineCode",{parentName:"li"},"async-storage.js")," file."),(0,r.kt)("li",{parentName:"ol"},"Inside that file, export ",(0,r.kt)("inlineCode",{parentName:"li"},"Async Storage")," mock.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"export * from '@react-native-async-storage/async-storage/jest/async-storage-mock';\n")),(0,r.kt)("h3",{id:"with-jest-setup-file"},"With Jest setup file"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"In your Jest config (probably in ",(0,r.kt)("inlineCode",{parentName:"li"},"package.json"),") add setup files location:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"jest": {\n  "setupFiles": ["./path/to/jestSetupFile.js"]\n}\n')),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Inside your setup file, set up Async Storage mocking:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"jest.mock('@react-native-async-storage/async-storage', () =>\n  require('@react-native-async-storage/async-storage/jest/async-storage-mock')\n);\n")),(0,r.kt)("h2",{id:"testing-with-mock"},"Testing with mock"),(0,r.kt)("p",null,"Each public method available from ",(0,r.kt)("inlineCode",{parentName:"p"},"Async Storage")," is\n",(0,r.kt)("a",{parentName:"p",href:"https://jestjs.io/docs/en/mock-functions"},"a mock function"),", that you can test\nfor certain condition, for example, if ",(0,r.kt)("inlineCode",{parentName:"p"},".getItem")," has been called with a\nspecific arguments:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"it('checks if Async Storage is used', async () => {\n  await asyncOperationOnAsyncStorage();\n\n  expect(AsyncStorage.getItem).toBeCalledWith('myKey');\n});\n")),(0,r.kt)("h2",{id:"overriding-mock-logic"},"Overriding Mock logic"),(0,r.kt)("p",null,"You can override mock implementation, by replacing its inner functions:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// somewhere in your configuration files\nimport AsyncStorageMock from '@react-native-async-storage/async-storage/jest/async-storage-mock';\n\nAsyncStorageMock.multiGet = jest.fn(([keys], callback) => {\n  // do something here to retrieve data\n  callback([]);\n});\n\nexport default AsyncStorageMock;\n")),(0,r.kt)("p",null,"You can\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/react-native-async-storage/async-storage/blob/main/jest/async-storage-mock.js"},"check its implementation"),"\nto get more insight into methods signatures."))}m.isMDXComponent=!0}}]);